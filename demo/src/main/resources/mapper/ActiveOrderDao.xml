<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ActiveOrderDao">

    <resultMap type="com.example.demo.entity.ActiveOrder" id="ActiveOrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="activityId" column="activity_id" jdbcType="INTEGER"/>
        <result property="commonUserId" column="common_user_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ActiveOrderMap">
        select
          id, status, activity_id, common_user_id
        from test.active_order
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ActiveOrderMap">
        select
          id, status, activity_id, common_user_id
        from test.active_order
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ActiveOrderMap">
        select
        id, status, activity_id, common_user_id
        from test.active_order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="activityId != null">
                and activity_id = #{activityId}
            </if>
            <if test="commonUserId != null">
                and common_user_id = #{commonUserId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into test.active_order(status, activity_id, common_user_id)
        values (#{status}, #{activityId}, #{commonUserId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test.active_order(status, activity_id, common_user_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.status}, #{entity.activityId}, #{entity.commonUserId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test.active_order(status, activity_id, common_user_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.status}, #{entity.activityId}, #{entity.commonUserId})
        </foreach>
        on duplicate key update
        status = values(status) , activity_id = values(activity_id) , common_user_id = values(common_user_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test.active_order
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="activityId != null">
                activity_id = #{activityId},
            </if>
            <if test="commonUserId != null">
                common_user_id = #{commonUserId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from test.active_order where id = #{id}
    </delete>
<!-- add a.activity_posters as activityPosters, -->
    <select id="queryUserOrderList" resultType="com.example.demo.bean.UserOrderInfo">
        select a.activity_posters as activityPosters, a.activity_title as activityTitle, status, a.release_time as releaseTime, a.addr
        ,active_order.id,active_order.activity_id
        from active_order
        right join activity a on active_order.activity_id = a.id
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="commonUserId != null">
                and common_user_id = #{commonUserId}
            </if>
        </where>
    </select>

    <select id="queryOrderDetailList" resultType="com.example.demo.bean.OrderDetailInfo">
        select a.activity_title as activityTitle, active_order.id as orderNumber, a.release_time as releaseTime, a.addr, a.registration_fee as orderFee
        from active_order
        right join activity a on active_order.activity_id = a.id
        where active_order.id = #{orderId}
    </select>

</mapper>

